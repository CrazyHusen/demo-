<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pers.husen.demo.shiro.dao.SysRoleMapper">
  <resultMap id="BaseResultMap" type="pers.husen.demo.shiro.po.SysRole">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="resource_ids" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="available" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="pers.husen.demo.shiro.po.SysRole">
    insert into sys_role (id, role, description, 
      resource_ids, available)
    values (#{id,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{resourceIds,jdbcType=VARCHAR}, #{available,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="pers.husen.demo.shiro.po.SysRole">
    update sys_role
    set role = #{role,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      resource_ids = #{resourceIds,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, role, description, resource_ids, available
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role, description, resource_ids, available
    from sys_role
    order by user_id ASC,userCreateDate DESC
  </select>
  <resultMap id="BaseResultMap" type="pers.husen.demo.shiro.po.SysRole">
    <constructor>
      <idArg column="id" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="role" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="description" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="resource_ids" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="available" javaType="java.lang.Boolean" jdbcType="BIT" />
    </constructor>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from sys_role
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="pers.husen.demo.shiro.po.SysRole">
    insert into sys_role (id, role, description, 
      resource_ids, available)
    values (#{id,jdbcType=BIGINT}, #{role,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, 
      #{resourceIds,jdbcType=VARCHAR}, #{available,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="pers.husen.demo.shiro.po.SysRole">
    update sys_role
    set role = #{role,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      resource_ids = #{resourceIds,jdbcType=VARCHAR},
      available = #{available,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select id, role, description, resource_ids, available
    from sys_role
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role, description, resource_ids, available
    from sys_role
    order by user_id ASC,userCreateDate DESC
  </select>
</mapper>